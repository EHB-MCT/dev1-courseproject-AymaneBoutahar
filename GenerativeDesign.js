// Some parts of this project were developed using suggestions generated by ChatGPT (OpenAI)
// 18/12/2024: https://chatgpt.com/share/6762c9c2-1620-8006-8698-2d5143176f66, https://chatgpt.com/share/6762d272-7fe4-8006-8ed2-0f1091dda8b9
// Modifications made by Aymane Boutahar
"use strict";
import context from "./scripts/context.js";
import * as Utils from "./scripts/utils.js";

let width = context.canvas.width;
let height = context.canvas.height;

let balls = [];
let AmountOfBalls = 15;

drawGenerativeArt();

for (let i = 0; i < AmountOfBalls; i++) {
	//this code was partially generated with ChatGPT (OpenAI) on 18/12/2024

	let size = Utils.randomNumber(0, 70); // the radius of the balls
	let xPos = Utils.randomNumber(size, width - size);
	let yPos = Utils.randomNumber(size, height - size);
	let xSpeed = Utils.randomNumber(-10, 10); // horizontal speed
	let ySpeed = Utils.randomNumber(-10, 10); // vertical speed
	let color = RandomColor(); // generates a random color for the balls

	balls.push({ xPos, yPos, size, xSpeed, ySpeed, color });
}

function RandomColor() {
	let colors = ["red", "blue", "white", "purple", "orange"];
	return colors[Math.floor(Math.random() * colors.length)];
}

//checks if the balls hit the screen
function updateBalls(ball) {
	ball.xPos += ball.xSpeed;
	ball.yPos += ball.ySpeed;

	if (ball.xPos + ball.size > width || ball.xPos - ball.size < 0) {
		ball.xSpeed = -ball.xSpeed; // reverses the horizontal direction
		ball.color = RandomColor(); //changes color
	}

	if (ball.yPos + ball.size > height || ball.yPos - ball.size < 0) {
		ball.ySpeed = -ball.ySpeed; // reverses the vertical direction
		ball.color = RandomColor(); //changes color
	}
}

function drawLetter(letter, x, y, fontSize) {
	//function that draws just a single letter in a random position with random colour.
	let colors = ["cyan", "purple", "blue", "lightblue", "white"];
	let color = colors[Math.floor(Math.random() * colors.length)]; // randomly select a color from the colors given in let colors.

	context.font = `${fontSize}20px IBM Plex Mono, monospace`; // sets the font for the text with the given font. In this case, IBM Plex Mono.
	context.fillStyle = color;
	context.fillText(letter, x, y);
}

function drawGenerativeArt() {
	// draws the design (the word "CHILL" with the randomly colored circles).

	context.fillStyle = "black";
	context.fillRect(0, 0, width, height);

	// these all define the starting position of the circles and words
	let beginx = width * 0.15; // X starting position is set to 15% of the canvas width
	let beginy = height * 0.5; // Y starting position is set to the middle of the canvas
	let fontSize = width * 0.15; // The font size takes about 15% of the canvas width
	let word = "CHILL";

	//this code was partially generated with ChatGPT (OpenAI) on 18/12/2024 https://chatgpt.com/share/6762d272-7fe4-8006-8ed2-0f1091dda8b9
	for (let i = 0; i < word.length; i++) {
		let x = beginx + i * (fontSize * 1.1); // zorgt voor een soort van willekeurige offset wat voor dynamiek zorgt in het werk
		let y = beginy + (Math.random() - 0.5) * fontSize;
		drawLetter(word[i], x, y, fontSize);
	}

	drawRandomCircles(width, height); // function call to draw random circles with random colours and coordinates
}

function drawRandomCircles(width, height) {
	// this function draws the circles on the canvas
	let circleamount = 15; //amount of circles being drawn

	for (let i = 0; i < circleamount; i++) {
		// loops through the number of circles
		let radius = Math.random() * 50 + 10;
		let x = Math.random() * width;
		let y = Math.random() * height;
		let colors = ["cyan", "purple", "blue", "lightblue", "white"];
		let color = colors[Math.floor(Math.random() * colors.length)];

		//steps to draw the circle
		context.beginPath();
		context.arc(x, y, radius, 0, Math.PI * 2, false); // draws the circle with a random radius and coordinate
		context.fillStyle = color;
		context.fill();
	}
}
